5	2	C:\C++\【循环嵌套】百钱百鸡.cpp		for(int i=0;i<=100/5;i++){
>	6	3	C:\C++\【循环嵌套】百钱百鸡.cpp			for(int j=1;j<=100/3;j++){
8	6	C:\C++\【循环嵌套】百钱百鸡.cpp					if(xjq*3+i+j==100) cout<<i<<" "<<j<<" "<<xjq*3<<endl;
4	64	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	71	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	81	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	82	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	89	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	96	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	106	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	107	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	114	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	121	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	130	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	131	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	138	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	155	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	156	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	290	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	670	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	671	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	745	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
4	977	未命名4	#include?<graphics.h>?#include?<stdlib.h>?#include?<dos.h>? #define?LEFTPRESS?0xff01?#define?LEFTCLICK?0xff10?#define?LEFTDRAG?0xff19?#define?MOUSEMOVE?0xff08?struct?{? ???int?num;/*格子当前处于什么状态,1有雷，0已经显示过数字或者空白格子*/????int?roundnum;/*统计格子周围有多少雷*/? ???int?flag;/*右键按下显示红旗的标志,0没有红旗标志,1有红旗标志*/?}Mine[10][10];? int?gameAGAIN=0;/*是否重来的变量*/? int?gamePLAY=0;/*是否是第一次玩游戏的标志*/?int?mineNUM;/*统计处理过的格子数*/?char?randmineNUM[3];/*显示数字的字符串*/?int?Keystate;?int?MouseExist;?int?MouseButton;?int?MouseX;? int?MouseY;? void?Init(void);/*图形驱动*/? void?MouseOn(void);/*鼠标光标显示*/?void?MouseOff(void);/*鼠标光标隐藏*/?void?MouseSetXY(int,int);/*设置当前位置*/?int??LeftPress(void);/*左键按下*/? int??RightPress(void);/*鼠标右键按下*/?void?MouseGetXY(void);/*得到当前位置*/?void?Control(void);/*游戏开始,重新,关闭*/?void?GameBegain(void);/*游戏开始画面*/?void?DrawSmile(void);/*画笑脸*/? void?DrawRedflag(int,int);/*显示红旗*/? void?DrawEmpty(int,int,int,int);/*两种空格子的显示*/?void?GameOver(void);/*游戏结束*/?void?GameWin(void);/*显示胜利*/? int??MineStatistics(int,int);/*统计每个格子周围的雷数*/?int??ShowWhite(int,int);/*显示无雷区的空白部分*/?void?GamePlay(void);/*游戏过程*/?void?Close(void);/*图形关闭*/?void?main(void)?{? ???Init();????Control();?
5	246	未命名4	???Close();? }? void?Init(void)/*图形开始*/?{? ???int?gd=DETECT,gm;? ???initgraph(&gd,&gm,"c:\\tc");?}? void?Close(void)/*图形关闭*/?{? ???closegraph();?}? void?MouseOn(void)/*鼠标光标显示*/?{? ???_AX=0x01;? ???geninterrupt(0x33);?}? void?MouseOff(void)/*鼠标光标隐藏*/?{? ???_AX=0x02;? ???geninterrupt(0x33);?}? void?MouseSetXY(int?x,int?y)/*设置当前位置*/?{? ???_CX=x;????_DX=y;? ???_AX=0x04;? ???geninterrupt(0x33);? }? int?LeftPress(void)/*鼠标左键按下*/?{? ???_AX=0x03;? ???geninterrupt(0x33);????return(_BX&1);?}? int?RightPress(void)/*鼠标右键按下*/?{? ???_AX=0x03;? ???geninterrupt(0x33);????return(_BX&2);? }? void?MouseGetXY(void)/*得到当前位置*/?{? ???_AX=0x03;? ???geninterrupt(0x33);?
5	247	未命名4	???Close();? }? void?Init(void)/*图形开始*/?{? ???int?gd=DETECT,gm;? ???initgraph(&gd,&gm,"c:\\tc");?}? void?Close(void)/*图形关闭*/?{? ???closegraph();?}? void?MouseOn(void)/*鼠标光标显示*/?{? ???_AX=0x01;? ???geninterrupt(0x33);?}? void?MouseOff(void)/*鼠标光标隐藏*/?{? ???_AX=0x02;? ???geninterrupt(0x33);?}? void?MouseSetXY(int?x,int?y)/*设置当前位置*/?{? ???_CX=x;????_DX=y;? ???_AX=0x04;? ???geninterrupt(0x33);? }? int?LeftPress(void)/*鼠标左键按下*/?{? ???_AX=0x03;? ???geninterrupt(0x33);????return(_BX&1);?}? int?RightPress(void)/*鼠标右键按下*/?{? ???_AX=0x03;? ???geninterrupt(0x33);????return(_BX&2);? }? void?MouseGetXY(void)/*得到当前位置*/?{? ???_AX=0x03;? ???geninterrupt(0x33);?
5	430	未命名4	???Close();? }? void?Init(void)/*图形开始*/?{? ???int?gd=DETECT,gm;? ???initgraph(&gd,&gm,"c:\\tc");?}? void?Close(void)/*图形关闭*/?{? ???closegraph();?}? void?MouseOn(void)/*鼠标光标显示*/?{? ???_AX=0x01;? ???geninterrupt(0x33);?}? void?MouseOff(void)/*鼠标光标隐藏*/?{? ???_AX=0x02;? ???geninterrupt(0x33);?}? void?MouseSetXY(int?x,int?y)/*设置当前位置*/?{? ???_CX=x;????_DX=y;? ???_AX=0x04;? ???geninterrupt(0x33);? }? int?LeftPress(void)/*鼠标左键按下*/?{? ???_AX=0x03;? ???geninterrupt(0x33);????return(_BX&1);?}? int?RightPress(void)/*鼠标右键按下*/?{? ???_AX=0x03;? ???geninterrupt(0x33);????return(_BX&2);? }? void?MouseGetXY(void)/*得到当前位置*/?{? ???_AX=0x03;? ???geninterrupt(0x33);?
6	90	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	160	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	166	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	309	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	428	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	441	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	445	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	511	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	577	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	619	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	678	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	679	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	727	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	743	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	760	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	815	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	831	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	855	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
6	883	未命名4	???MouseX=_CX;? ???MouseY=_DX;?}? void?Control(void)/*游戏开始,重新,关闭*/?{? ???int?gameFLAG=1;/*游戏失败后判断是否重新开始的标志*/????while(1)? ???{? ??????if(gameFLAG)/*游戏失败后没判断出重新开始或者退出游戏的话就继续判断*/???????{? ?????GameBegain();?/*游戏初始画面*/??????GamePlay();/*具体游戏*/? ?????if(gameAGAIN==1)/*游戏中重新开始*/??????{? ????????gameAGAIN=0;?????????continue;??????}???????}? ???MouseOn();? ???gameFLAG=0;? ???if(LeftPress())/*判断是否重新开始*/? ???{? ??????MouseGetXY();? ??????if(MouseX>280&&MouseX<300&&MouseY>65&&MouseY<85)???????{? ?????gameFLAG=1;??????continue;? ??????}????}? ???if(kbhit())/*判断是否按键退出*/???????break;????}? ???MouseOff();?}? void?DrawSmile(void)/*画笑脸*/?{? ???setfillstyle(SOLID_FILL,YELLOW);????fillellipse(290,75,10,10);????setcolor(YELLOW);? ???setfillstyle(SOLID_FILL,BLACK);/*眼睛*/????fillellipse(285,75,2,2);????fillellipse(295,75,2,2);????setcolor(BLACK);/*嘴巴*/????bar(287,80,293,81);?
7	16	未命名4	1234567890ABCDEFGHIJKLMNabcdefghijklmn!@#$%^&&*()_+.
7	30	未命名4	1234567890ABCDEFGHIJKLMNabcdefghijklmn!@#$%^&&*()_+.
6	2	C:\C++\【循环嵌套】拆数（三数之和）.cpp		for(int i=1;i<=n;i++){
7	3	C:\C++\【循环嵌套】拆数（三数之和）.cpp			for(int j=i;j<=n-i-1;j++){
8	4	C:\C++\【循环嵌套】拆数（三数之和）.cpp				for(int k=j;k<=n;k++) {
9	6	C:\C++\【循环嵌套】拆数（三数之和）.cpp					if(i+k+j==n) cout<<n<<"="<<i<<"+"<<j<<"+"<<k<<endl;
3	28	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// Copyright (C) 1997-2014 Free Software Foundation, Inc.
3	35	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// Copyright (C) 1997-2014 Free Software Foundation, Inc.
3	42	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// Copyright (C) 1997-2014 Free Software Foundation, Inc.
5	9	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// This file is part of the GNU ISO C++ Library.  This library is free
5	23	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// This file is part of the GNU ISO C++ Library.  This library is free
5	67	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// This file is part of the GNU ISO C++ Library.  This library is free
6	6	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// software; you can redistribute it and/or modify it under the
6	49	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// software; you can redistribute it and/or modify it under the
7	11	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// terms of the GNU General Public License as published by the
8	4	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// Free Software Foundation; either version 3, or (at your option)
8	11	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// Free Software Foundation; either version 3, or (at your option)
8	18	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// Free Software Foundation; either version 3, or (at your option)
11	63	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// This library is distributed in the hope that it will be useful,
12	65	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// but WITHOUT ANY WARRANTY; without even the implied warranty of
13	23	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
13	31	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
14	31	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// GNU General Public License for more details.
16	21	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// Under Section 7 of GPL version 3, you are granted additional
18	29	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// 3.1, as published by the Free Software Foundation.
18	36	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// 3.1, as published by the Free Software Foundation.
18	43	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// 3.1, as published by the Free Software Foundation.
20	37	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// You should have received a copy of the GNU General Public License and
21	12	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// a copy of the GCC Runtime Library Exception along with this program;
22	12	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
22	63	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
25	6	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	/** @file include/iostream
33	3	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	#ifndef _GLIBCXX_IOSTREAM
33	7	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	#ifndef _GLIBCXX_IOSTREAM
34	4	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	#define _GLIBCXX_IOSTREAM 1
38	22	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	#include <bits/c++config.h>
42	37	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	namespace std _GLIBCXX_VISIBILITY(default)
50	22	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	   *  objects</em>.  For other declarations, see
52	24	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	   *  and the @link iosfwd I/O forward declarations @endlink
52	32	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	   *  and the @link iosfwd I/O forward declarations @endlink
54	30	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	   *  They are required by default to cooperate with the global C
55	20	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	   *  library's @c FILE streams, and to be available during program
56	32	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	   *  startup and termination. For more information, see the section of the
56	43	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	   *  startup and termination. For more information, see the section of the
56	71	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	   *  startup and termination. For more information, see the section of the
62	59	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  extern ostream cerr;		/// Linked to standard error (unbuffered)
62	60	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  extern ostream cerr;		/// Linked to standard error (unbuffered)
63	57	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  extern ostream clog;		/// Linked to standard error (buffered)
63	58	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  extern ostream clog;		/// Linked to standard error (buffered)
65	3	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	#ifdef _GLIBCXX_USE_WCHAR_T
65	6	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	#ifdef _GLIBCXX_USE_WCHAR_T
68	60	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  extern wostream wcerr;	/// Linked to standard error (unbuffered)
68	61	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  extern wostream wcerr;	/// Linked to standard error (unbuffered)
69	58	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  extern wostream wclog;	/// Linked to standard error (buffered)
69	59	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  extern wostream wclog;	/// Linked to standard error (buffered)
70	6	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	#endif
73	6	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  // For construction of filebuffers for cout, cin, cerr, clog et. al.
73	24	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  // For construction of filebuffers for cout, cin, cerr, clog et. al.
73	26	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  // For construction of filebuffers for cout, cin, cerr, clog et. al.
73	32	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  // For construction of filebuffers for cout, cin, cerr, clog et. al.
73	33	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  // For construction of filebuffers for cout, cin, cerr, clog et. al.
73	38	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	  // For construction of filebuffers for cout, cin, cerr, clog et. al.
79	6	C:\Program Files (x86)\Dev-Cpp\MinGW64\lib\gcc\x86_64-w64-mingw32\4.9.2\include\c++\iostream	#endif /* _GLIBCXX_IOSTREAM */
5	2	C:\C++\一百馒头一百僧升级版.cpp		for(int i=1;i<=100/3;i++){
6	3	C:\C++\一百馒头一百僧升级版.cpp			for(int j=1;j<=100;j++){
8	6	C:\C++\一百馒头一百僧升级版.cpp					if(xjq*3+i+j==100) cout<<i<<" "<<j<<" "<<xjq*3<<endl;
9	7	C:\C++\寻找质数.cpp	     if(x==0) return false;
9	22	C:\C++\寻找质数.cpp	     if(x==0) return false;
10	6	C:\C++\寻找质数.cpp	     for(y=2;y<=sqrt(x);y++)
11	11	C:\C++\寻找质数.cpp	         if (x%y==0)
12	20	C:\C++\寻找质数.cpp	            return false;
27	3	C:\C++\寻找质数.cpp		if(k=='a'){
30	6	C:\C++\寻找质数.cpp	    if(n>=2)
37	5	C:\C++\寻找质数.cpp	    for(i=3;i<=n;i++){
39	10	C:\C++\寻找质数.cpp	        if (prime(i))
48	3	C:\C++\寻找质数.cpp		if(k=='b'){
50	4	C:\C++\寻找质数.cpp			if(n>=2)
54	5	C:\C++\寻找质数.cpp	    for(i=3;i<=n;i++){
56	10	C:\C++\寻找质数.cpp	        if (prime(i))
7	5	C:\C++\【循环嵌套】1000以内的素数.cpp	    for(int i=3;i<=1000;i++){
8	10	C:\C++\【循环嵌套】1000以内的素数.cpp	        if (isprimeint(i))//是质数
11	11	C:\C++\【循环嵌套】1000以内的素数.cpp	        	if(outs==2) cout<<i;//行首
14	4	C:\C++\【循环嵌套】1000以内的素数.cpp			if(outs==11){//第十个
32	7	C:\C++\【循环嵌套】1000以内的素数.cpp	     if(x==0) return false;
32	22	C:\C++\【循环嵌套】1000以内的素数.cpp	     if(x==0) return false;
33	6	C:\C++\【循环嵌套】1000以内的素数.cpp	     for(y=2;y<=sqrt(x);y++)
34	11	C:\C++\【循环嵌套】1000以内的素数.cpp	         if (x%y==0)
35	20	C:\C++\【循环嵌套】1000以内的素数.cpp	            return false;
